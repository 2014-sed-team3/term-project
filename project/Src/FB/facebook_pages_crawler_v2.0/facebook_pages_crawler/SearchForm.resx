<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAGRkAAAEACABIBwAAFgAAACgAAAAZAAAAMgAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA26CCAP7+/gDPk3QAyYxsAGsxEwC7ZkEAz5R0AL5nQgB1MRMAl2NNAMiXfQDej20AtWE8AIle
        SgCnb1gAqm1TAMSGZgDBhGQA2aeMAOGukgDIjGwAwH5cAPr28wDem38ApG9YAMl4VgDMbEQA1KmTALZ8
        YwCyemIAoWxWALhkQAC9hWkAYjETANWaeQB/RioAvmtHAM+dgwCpcVkAiVg6AMFpQgDgnnwAv181ANCY
        eQCwc1gAPk1ZAMqSdgDDg2EAnGZPAK13YACzeFwA1qSKAMVrRADNbkYAsXRaAKFtVwDXn4UA6dLGAK52
        XgDIiWgA2qyUAM2cggC5fWMAwoVlAKtwVwAAbcgAs3VZAMVkOwDepIUAw2lDAKVoSQDpy70Aq3JZANSg
        hQDMiGUA0JNzAF5KRQDGh2cAzpFwAM+WeQB/PwAAzI5sAMaGZQCtZ0gAsHliALR7YwDQoosAyGxEAMJ9
        WQCjblcA25p/ANuvmADSnoIAwH5gAMOFZQCob1YAmmVQAH5hVACuXDcAuHdbAJZdQwDOi24AwopvAOuS
        awDFgmUA0ZRzAKVaOgDzxKoA8ePcALJiPgDhjmsAo1g3AKRVMwDRlHQArl04AMZqQwDZjW0A4olkAKpX
        MgCyXjkAs3JWAKNWNQC1dFcAwGdBAMGDZADDgF4Ax4ppAL16WQD06OEA4sK0ALx3WAD48e0Avn9jAL5n
        QgDKhGYApkwkAKxcOACvcFUA3I9uAPTp4wC4WzMApF9AAOnIugDrw64Aplg2AKxoSADUjm8A5r2oAPXB
        pQC5ZD8AxYZmALBhPQDJimgAyZJ6ALZbMwDPmn8AxGA1ANWagQDYqpIAyItrALZzUgDcl3oAuXteALpj
        PQDYpYkAnVU2AJ9VNQDOknQAqlo3AMRqQwCqXTwAzoNjAKxSKgCvXjkAs29RAJxUMwC9ck8AwGhBAMKB
        YACyYT0A5L2pALt4WQC8fmMAvGZBAMiAYQCYSyoAqVw7AKltUgC5ZUAA5bGXANmfhgC6XDQAuHZZAOXG
        uADHiWkA1aWMANKaggC9YjoAzpd+AKlcOwCtXzwApVo5APHDqwDr0MMAr2NCAPXq5ADekXAAxoZlALJ0
        WQCsXDkAm08uAMiFZQC+Z0EAwIBkAP79/QC/elkA6Me5AMSEZADCgmMAwmlCALt3WACmVjQAtHhdALRf
        OgCyWDEA5oxlANeQcQDKbEQAslozANKXeACoWTcAo1k5AOKRcACzYj4A8+fhAPTGrACoXDsAxYdmAOqW
        cgDGiWkAtmM/AMWIaQCxYT4AtGI/ALVjPwC8ZkEArV88ALJhPgCvYD0AumVAALdkPwDMkXEA05p7APLC
        qAD///8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALg5hHzg4WhkPJ0lJSScPGVofYWJCAAAA
        AAAALjGH43V1i+np6e/vaOLidm/pz6K5CkIAAAAAAGWTLyUGCEY1WDY2NnUYGFsa3EYanqwOAAAAACIQ
        x7Tglriy3HTk5J3M////vyt8pCVbVAAAAAAJP15j9SAGCCmqNVidjwICAjkrCAbgZmQAAAAACT+Dc+rx
        vbgI3KqqnY////85wLi94IdkAAAAAAkd3Ynz9Pv6uAiy3CuP////no36+3iHZAAAAAAJHcGp+fj1+/oG
        1dXA2f///8Wb+/Wu1EMAAAAABVZ758n5+PTxIPr6m8L////F4fT4iWlDAAAAAAUee5Gryfnz6vXx++XC
        ////nOHz+anbLQAAAAAFVXl67avJ+ZhutOWIgv///5qId9Ln1i0AAAAABVV5p2vtu6vJyc3WgDr///9c
        toXNcYVBAAAAAAUyiqfoa2vtu96vAv//////////39O3QQAAAAAiMoqwpqancMrer////////////9+6
        t2AAAAAAIjK8sI6Sr92A2KDrjBf///+Egc7fut9gAAAAAAUhZ7Z9Ee7ul1NT2tg6////PYMw27aaMwAA
        AAAoV8USQEAREe5OTlNZOgICAswWfl8SpQsAAAAAKCbF2vLy8vDww39/frX/////zm2cs6ULAAAAAChX
        SjwEBAQVFQQEBDwvFwICAgICNDCfPgAAAAAoV58E/Pz8/Pz8/Pz8mcSB1////8TUvj4AAAAAUV2UB08D
        BwMDAwMDAwdST0o9XD0H/ctQAAAAAABMlZQ5/f39/f39/f39/f1yampypZC+SwAAAAAAAEy+7Gz+/v7+
        /v7+/v7+/v7+bOwUIwAAAAAAAAAASypFAQEBAQEBAQEBAQEBAUUqRwAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>